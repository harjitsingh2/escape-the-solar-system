"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkescape_the_solar_system"] = self["webpackChunkescape_the_solar_system"] || []).push([["src_scripts_oldgame_js"],{

/***/ "./src/scripts/mercury.js":
/*!********************************!*\
  !*** ./src/scripts/mercury.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _planet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./planet.js */ \"./src/scripts/planet.js\");\n\nlet mercury = new _planet_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\nfunction makePlanet1() {\n  const planet = document.getElementById(\"myplanet\");\n  planet.width = 400;\n  planet.height = 600;\n  const ctx = planet.getContext(\"2d\");\n  mercury.makeMercury(ctx);\n}\nmakePlanet1();\nconsole.log(\"Welcome to Mercury\");\n\n// array of questions and answer objects\nlet questions = [{\n  question: \"Mercury might be the smallest planet in our solar system, but it is also the fastest - traveling 29 miles per second! This is due to its proximity to the Sun. Even though it is so close to the Sun, it is not the hottest planet in our solar system. Venus is actually the hottest. Mercury has no rings or moons. The small, terrestrial planet does not have an atmosphere. It does have a thin exosphere made of oxygen, sodium, hydrogen, helium, and potassium, in descending order.\"\n}, {\n  question: \"Mercury is the _______ planet from the Sun\",\n  answers: {\n    a: \"first\",\n    b: \"second\",\n    c: \"third\"\n  },\n  correctAnswer: 'a'\n}, {\n  question: \"What is Mercury's exosphere primarily composed of?\",\n  answers: {\n    a: \"hydrogen\",\n    b: \"mercury\",\n    c: \"oxygen\"\n  },\n  correctAnswer: 'c'\n}, {\n  question: \"How fast does Mercury travel?\",\n  answers: {\n    a: \"29 miles per second\",\n    b: \"290 miles per second\",\n    c: \"2900 miles per second\"\n  },\n  correctAnswer: 'a'\n}];\n\n// get references to HTML elements\nconst quizContainer = document.getElementById('quiz');\nconst resultsContainer = document.getElementById('results');\nconst submitButton = document.getElementById('submit');\nconst planetButton = document.getElementById('next-planet');\n\n// create our game quiz\nfunction buildQuiz() {\n  // store the HTML output\n  let output = [];\n  questions.forEach((currentQuestion, questionNumber) => {\n    // store the list of possible answers\n    let possibleAnswers = [];\n\n    // add radio button for each possible answer and add to array \n    for (let letter in currentQuestion.answers) {\n      possibleAnswers.push(`<label>\n              <input type=\"radio\" name=\"question${questionNumber}\" value=\"${letter}\">\n              ${letter})\n              ${currentQuestion.answers[letter]}\n            </label>`);\n    }\n\n    // add this question and its answers to the output array\n    if (questionNumber === 0) {\n      output.push(`<div class=\"slide active-slide\">\n                  <div class=\"question\"> ${currentQuestion.question} </div>\n                  <div class=\"answers\"> ${possibleAnswers.join('')} </div>\n                </div>`);\n    } else {\n      output.push(`<div class=\"slide\">\n            <div class=\"question\"> ${currentQuestion.question} </div>\n            <div class=\"answers\"> ${possibleAnswers.join('')} </div>\n          </div>`);\n    }\n  });\n\n  // combine  output list into one string of HTML and display on page\n  quizContainer.innerHTML = output.join('');\n}\n\n// show results to quiz  \nfunction showResults() {\n  // gather answer containers from our quiz\n  const answerContainers = quizContainer.querySelectorAll('.answers');\n\n  // find answer for each question\n  questions.forEach((currentQuestion, questionNumber) => {\n    let answerContainer = answerContainers[questionNumber];\n    let selector = `input[name=question${questionNumber}]:checked`;\n    let userAnswer = (answerContainer.querySelector(selector) || {}).value;\n    // debugger;\n    if (userAnswer === currentQuestion.correctAnswer) {\n      score++;\n      answerContainers[questionNumber].style.color = 'lightgreen';\n    } else {\n      answerContainers[questionNumber].style.color = 'red';\n    }\n    return score;\n  });\n  score = score - 1;\n  // const showAnswers = quizContainer.querySelector('.slide');\n\n  // how can I set the opacity to 10 after we show results?\n  // showAnswers.style.opacity = 0;\n  resultsContainer.style.opacity = 10;\n  resultsContainer.innerHTML = `Your score: ${score} / ${questions.length - 1}`;\n  submitButton.removeEventListener('click', showResults);\n  startButton.removeEventListener(\"click\", showNextSlide);\n  nextButton.removeEventListener(\"click\", showNextSlide);\n}\n\n// function to create slides of questions\nfunction showSlide(n) {\n  // debugger \n  // slides[currentSlide].classList.remove('slide');\n  // slides[n].classList.add('slide');\n  const slides = document.querySelectorAll(\".slide\");\n  const activeSlide = document.querySelector('.active-slide');\n  if (activeSlide) {\n    activeSlide.classList.remove('active-slide');\n  }\n  slides[n].classList.add('active-slide');\n  currentSlide = n;\n  // debugger\n  if (currentSlide === 0) {\n    startButton.style.display = 'inline-block';\n    nextButton.style.display = 'none';\n    submitButton.style.display = 'none';\n    planetButton.style.display = 'none';\n  } else if (currentSlide === slides.length - 1) {\n    startButton.style.display = 'none';\n    nextButton.style.display = 'none';\n    submitButton.style.display = 'inline-block';\n    planetButton.style.display = 'none';\n  } else {\n    nextButton.style.display = 'inline-block';\n    submitButton.style.display = 'none';\n    startButton.style.display = 'none';\n    planetButton.style.display = 'none';\n  }\n\n  // display next planet and remove other buttons\n  submitButton.addEventListener(\"click\", () => {\n    slides[0].classList.add('active-slide');\n    slides[1].classList.add('active-slide');\n    slides[2].classList.add('active-slide');\n    planetButton.style.display = 'inline-block';\n    nextButton.style.display = 'none';\n    submitButton.style.display = 'none';\n    startButton.style.display = 'none';\n  });\n}\nfunction showNextSlide() {\n  if (currentSlide === 4) {\n    currentSlide = 0;\n  } else {\n    currentSlide++;\n  }\n  showSlide(currentSlide);\n}\nbuildQuiz();\n\n// creating pagination\nconst startButton = document.getElementById(\"start\");\nconst nextButton = document.getElementById(\"next\");\n// const slides = document.querySelectorAll(\".slide\");\nlet currentSlide = 0;\n// slides[currentSlide].classList.add('active-slide')\n\nshowSlide(currentSlide);\nsubmitButton.addEventListener('click', showResults);\nstartButton.addEventListener(\"click\", showNextSlide);\nnextButton.addEventListener(\"click\", showNextSlide);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/mercury.js\n");

/***/ }),

/***/ "./src/scripts/oldgame.js":
/*!********************************!*\
  !*** ./src/scripts/oldgame.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _planet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./planet.js */ \"./src/scripts/planet.js\");\n/* harmony import */ var _mercury_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mercury.js */ \"./src/scripts/mercury.js\");\n\n\n// import './venus.js'\n\nconsole.log(\"Begin game\");\nconst submitButton = document.getElementById('submit');\nsubmitButton.addEventListener(\"click\", () => {\n  console.log(\"Quiz has been submitted\");\n});\n\n/*\nplan for loading new planets:\n1. create a table of planets\n// const planets = [mercury, venus];\n2. when beginning game, start at planets[0]\n3. create a button for \"Go to next planet\"\n4. add event listener on that button to render planets[1] and remove planets[0]\n\n*/\n\nlet mercury = new _planet_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\nfunction makePlanet1() {\n  const planet = document.getElementById(\"myplanet\");\n  planet.width = 400;\n  planet.height = 600;\n  const ctx = planet.getContext(\"2d\");\n  mercury.makeMercury(ctx);\n}\nmakePlanet1();\n\n// functionality for next planet button\n\nfunction nextPlanet() {}\nsubmitButton.addEventListener('click', nextPlanet);\nlet venus = new _planet_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\n// function makePlanet2() {\n//     const planet = document.getElementById(\"myplanet\");\n//     planet.width = 400;\n//     planet.height = 600;\n//     const ctx = planet.getContext(\"2d\"); \n//     venus.makeVenus(ctx);\n// }\n// makePlanet2();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9vbGRnYW1lLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFpQztBQUNaO0FBQ3JCOztBQUVBQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxZQUFZLENBQUM7QUFHekIsTUFBTUMsWUFBWSxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxRQUFRLENBQUM7QUFFdERGLFlBQVksQ0FBQ0csZ0JBQWdCLENBQUMsT0FBTyxFQUFFLE1BQU07RUFDN0NMLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHlCQUF5QixDQUFDO0FBQ3RDLENBQUMsQ0FBQzs7QUFHRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSUssT0FBTyxHQUFHLElBQUlQLGtEQUFNLENBQUQsQ0FBQztBQUV4QixTQUFTUSxXQUFXQSxDQUFBLEVBQUc7RUFDbkIsTUFBTUMsTUFBTSxHQUFHTCxRQUFRLENBQUNDLGNBQWMsQ0FBQyxVQUFVLENBQUM7RUFDbERJLE1BQU0sQ0FBQ0MsS0FBSyxHQUFHLEdBQUc7RUFDbEJELE1BQU0sQ0FBQ0UsTUFBTSxHQUFHLEdBQUc7RUFDbkIsTUFBTUMsR0FBRyxHQUFHSCxNQUFNLENBQUNJLFVBQVUsQ0FBQyxJQUFJLENBQUM7RUFDbkNOLE9BQU8sQ0FBQ08sV0FBVyxDQUFDRixHQUFHLENBQUM7QUFDNUI7QUFDQUosV0FBVyxDQUFDLENBQUM7O0FBRWI7O0FBRUEsU0FBU08sVUFBVUEsQ0FBQSxFQUFHLENBRXRCO0FBRUFaLFlBQVksQ0FBQ0csZ0JBQWdCLENBQUMsT0FBTyxFQUFFUyxVQUFVLENBQUM7QUFHbEQsSUFBSUMsS0FBSyxHQUFHLElBQUloQixrREFBTSxDQUFELENBQUM7O0FBRXRCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lc2NhcGUtdGhlLXNvbGFyLXN5c3RlbS8uL3NyYy9zY3JpcHRzL29sZGdhbWUuanM/ZmM2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGxhbmV0IGZyb20gJy4vcGxhbmV0LmpzJztcbmltcG9ydCAnLi9tZXJjdXJ5LmpzJ1xuLy8gaW1wb3J0ICcuL3ZlbnVzLmpzJ1xuXG5jb25zb2xlLmxvZyhcIkJlZ2luIGdhbWVcIilcblxuXG5jb25zdCBzdWJtaXRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3VibWl0Jyk7XG5cbnN1Ym1pdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuY29uc29sZS5sb2coXCJRdWl6IGhhcyBiZWVuIHN1Ym1pdHRlZFwiKTtcbn0pXG5cblxuLypcbnBsYW4gZm9yIGxvYWRpbmcgbmV3IHBsYW5ldHM6XG4xLiBjcmVhdGUgYSB0YWJsZSBvZiBwbGFuZXRzXG4vLyBjb25zdCBwbGFuZXRzID0gW21lcmN1cnksIHZlbnVzXTtcbjIuIHdoZW4gYmVnaW5uaW5nIGdhbWUsIHN0YXJ0IGF0IHBsYW5ldHNbMF1cbjMuIGNyZWF0ZSBhIGJ1dHRvbiBmb3IgXCJHbyB0byBuZXh0IHBsYW5ldFwiXG40LiBhZGQgZXZlbnQgbGlzdGVuZXIgb24gdGhhdCBidXR0b24gdG8gcmVuZGVyIHBsYW5ldHNbMV0gYW5kIHJlbW92ZSBwbGFuZXRzWzBdXG5cbiovXG5cbmxldCBtZXJjdXJ5ID0gbmV3IFBsYW5ldDtcblxuZnVuY3Rpb24gbWFrZVBsYW5ldDEoKSB7XG4gICAgY29uc3QgcGxhbmV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJteXBsYW5ldFwiKTtcbiAgICBwbGFuZXQud2lkdGggPSA0MDA7XG4gICAgcGxhbmV0LmhlaWdodCA9IDYwMDtcbiAgICBjb25zdCBjdHggPSBwbGFuZXQuZ2V0Q29udGV4dChcIjJkXCIpOyBcbiAgICBtZXJjdXJ5Lm1ha2VNZXJjdXJ5KGN0eCk7XG59XG5tYWtlUGxhbmV0MSgpO1xuXG4vLyBmdW5jdGlvbmFsaXR5IGZvciBuZXh0IHBsYW5ldCBidXR0b25cblxuZnVuY3Rpb24gbmV4dFBsYW5ldCgpIHtcblxufVxuXG5zdWJtaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBuZXh0UGxhbmV0KTtcblxuXG5sZXQgdmVudXMgPSBuZXcgUGxhbmV0O1xuXG4vLyBmdW5jdGlvbiBtYWtlUGxhbmV0MigpIHtcbi8vICAgICBjb25zdCBwbGFuZXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm15cGxhbmV0XCIpO1xuLy8gICAgIHBsYW5ldC53aWR0aCA9IDQwMDtcbi8vICAgICBwbGFuZXQuaGVpZ2h0ID0gNjAwO1xuLy8gICAgIGNvbnN0IGN0eCA9IHBsYW5ldC5nZXRDb250ZXh0KFwiMmRcIik7IFxuLy8gICAgIHZlbnVzLm1ha2VWZW51cyhjdHgpO1xuLy8gfVxuLy8gbWFrZVBsYW5ldDIoKTtcblxuIl0sIm5hbWVzIjpbIlBsYW5ldCIsImNvbnNvbGUiLCJsb2ciLCJzdWJtaXRCdXR0b24iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm1lcmN1cnkiLCJtYWtlUGxhbmV0MSIsInBsYW5ldCIsIndpZHRoIiwiaGVpZ2h0IiwiY3R4IiwiZ2V0Q29udGV4dCIsIm1ha2VNZXJjdXJ5IiwibmV4dFBsYW5ldCIsInZlbnVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/oldgame.js\n");

/***/ }),

/***/ "./src/scripts/planet.js":
/*!*******************************!*\
  !*** ./src/scripts/planet.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Planet {\n  constructor(xpos, ypos, radius, color) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.radius = radius;\n    this.color = color;\n    // this.score = 0;\n    // this.name = name;\n  }\n\n  // add Mercury to canvas\n  makeMercury(ctx) {\n    ctx.font = \"bold 40px monospace\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Mercury\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/mercury-color-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 500, 500 * base_image.height / base_image.width);\n    };\n    console.log(\"Mercury created\");\n  }\n  // add Venus to canvas\n  makeVenus(ctx) {\n    ctx.font = \"bold 40px monospace\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Venus\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/venus-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, 0, 150, 380, 380 * base_image.height / base_image.width);\n    };\n    console.log(\"Venus created\");\n  }\n  makeEarth(ctx) {\n    ctx.font = \"bold 40px monospace\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Earth\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/earth-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, 0, 150, 400, 400 * base_image.height / base_image.width);\n    };\n    console.log(\"Earth created\");\n  }\n  makeMars(ctx) {\n    ctx.font = \"bold 40px monospace\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Mars\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/mars-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -100, 140, 600, 600 * base_image.height / base_image.width);\n    };\n    console.log(\"Mars created\");\n  }\n  makeJupiter(ctx) {\n    ctx.font = \"bold 40px monospace\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Jupiter\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/jupiter-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 500, 500 * base_image.height / base_image.width);\n    };\n    console.log(\"Jupiter created\");\n  }\n  makeSaturn(ctx) {\n    ctx.font = \"bold 40px monospace\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Saturn\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/saturn-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 500, 500 * base_image.height / base_image.width);\n    };\n    console.log(\"Saturn created\");\n  }\n  makeUranus(ctx) {\n    ctx.font = \"bold 40px monospace\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Uranus\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/uranus-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 500, 500 * base_image.height / base_image.width);\n    };\n    console.log(\"Uranus created\");\n  }\n  makeNeptune(ctx) {\n    ctx.font = \"bold 40px monospace\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Neptune\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/neptune-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 500, 500 * base_image.height / base_image.width);\n    };\n    console.log(\"Neptune created\");\n  }\n\n  // draw circle onto canvas\n  draw(ctx) {\n    ctx.font = \"bold 50px monospace\";\n    ctx.fillText(\"Mercury\", 100, 50);\n    // create a circle\n    ctx.beginPath();\n    ctx.arc(200, 250, 100, 0, 2 * Math.PI, true);\n    ctx.strokeStyle = \"black\"; // creates an outline\n    ctx.lineWidth = 10;\n    ctx.stroke();\n    ctx.fillStyle = \"brown\"; // creates the inside fill. inside the outline\n    ctx.fill();\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Planet);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/planet.js\n");

/***/ })

}]);