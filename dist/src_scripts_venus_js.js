"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkescape_the_solar_system"] = self["webpackChunkescape_the_solar_system"] || []).push([["src_scripts_venus_js"],{

/***/ "./src/scripts/planet.js":
/*!*******************************!*\
  !*** ./src/scripts/planet.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Planet {\n  constructor(xpos, ypos, radius, color) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.radius = radius;\n    this.color = color;\n    // this.score = 0;\n    // this.name = name;\n  }\n\n  // add Mercury to canvas\n  makeMercury(ctx) {\n    ctx.font = \"bold 40px serif\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Mercury\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/mercury-color-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 500, 500 * base_image.height / base_image.width);\n    };\n    console.log(\"Mercury created\");\n  }\n  // add Venus to canvas\n  makeVenus(ctx) {\n    ctx.font = \"bold 40px serif\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Venus\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/venus-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 400, 400 * base_image.height / base_image.width);\n    };\n    console.log(\"Venus created\");\n  }\n  makeEarth(ctx) {\n    ctx.font = \"bold 40px serif\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Earth\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/earth-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 400, 400 * base_image.height / base_image.width);\n    };\n    console.log(\"Earth created\");\n  }\n  makeMars(ctx) {\n    ctx.font = \"bold 40px serif\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Mars\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/mars-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 600, 600 * base_image.height / base_image.width);\n    };\n    console.log(\"Mars created\");\n  }\n  makeJupiter(ctx) {\n    ctx.font = \"bold 40px serif\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Jupiter\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/jupiter-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 500, 500 * base_image.height / base_image.width);\n    };\n    console.log(\"Jupiter created\");\n  }\n  makeSaturn(ctx) {\n    ctx.font = \"bold 40px serif\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Saturn\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/saturn-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 500, 500 * base_image.height / base_image.width);\n    };\n    console.log(\"Saturn created\");\n  }\n  makeUranus(ctx) {\n    ctx.font = \"bold 40px serif\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Uranus\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/uranus-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 500, 500 * base_image.height / base_image.width);\n    };\n    console.log(\"Uranus created\");\n  }\n  makeNeptune(ctx) {\n    ctx.font = \"bold 40px serif\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Neptune\", 110, 140);\n    let base_image = new Image();\n    base_image.src = './src/images/neptune-transparent.png';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, -50, 150, 500, 500 * base_image.height / base_image.width);\n    };\n    console.log(\"Neptune created\");\n  }\n\n  // draw circle onto canvas\n  draw(ctx) {\n    ctx.font = \"bold 50px serif\";\n    ctx.fillText(\"Mercury\", 100, 50);\n    // create a circle\n    ctx.beginPath();\n    ctx.arc(200, 250, 100, 0, 2 * Math.PI, true);\n    ctx.strokeStyle = \"black\"; // creates an outline\n    ctx.lineWidth = 10;\n    ctx.stroke();\n    ctx.fillStyle = \"brown\"; // creates the inside fill. inside the outline\n    ctx.fill();\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Planet);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/planet.js\n");

/***/ }),

/***/ "./src/scripts/venus.js":
/*!******************************!*\
  !*** ./src/scripts/venus.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _planet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./planet.js */ \"./src/scripts/planet.js\");\n\nlet venus = new _planet_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\nfunction makePlanet() {\n  const planet = document.getElementById(\"myplanet\");\n  planet.width = 400;\n  planet.height = 600;\n  const ctx = planet.getContext(\"2d\");\n  venus.makeVenus(ctx);\n}\nmakePlanet();\nconsole.log(\"Welcome to Venus\");\n\n// array of questions and answer objects\nlet questions = [{\n  question: \"Venus, aka 'Earth's twin', has a size and structure similar to Earth. But it has a dense and toxic atmosphere filled with carbon dioxide and sulfuric acid which has led to extreme surface heat. Venus rotates very slowly. One day on Venus is 243 Earth days and one year is 225 Earth days. Meaning that a Venusian day is longer than a year! Additionally, Venus rotates in the opposite direction of most planets. It is quite the oddball.\"\n}, {\n  question: \"Venus is the hottest planet in our solar system\",\n  answers: {\n    a: \"true\",\n    b: \"false\"\n  },\n  correctAnswer: 'a'\n}, {\n  question: \"Approximately how long is one day on Venus?\",\n  answers: {\n    a: \"1 Earth day\",\n    b: \"100 Earth days\",\n    c: \"200 Earth days\"\n  },\n  correctAnswer: 'c'\n}, {\n  question: \"Which of these can be found in Venus' atmosphere?\",\n  answers: {\n    a: \"oxygen\",\n    b: \"ozone\",\n    c: \"sulfuric acid\"\n  },\n  correctAnswer: 'c'\n}];\n\n// get references to HTML elements\nconst quizContainer = document.getElementById('quiz');\nconst resultsContainer = document.getElementById('results');\nconst submitButton = document.getElementById('submit');\nconst planetButton = document.getElementById('next-planet');\n\n// create our game quiz\nfunction buildQuiz() {\n  // store the HTML output\n  const output = [];\n  questions.forEach((currentQuestion, questionNumber) => {\n    // store the list of possible answers\n    const answers = [];\n\n    // add radio button for each possible answer and add to array \n    for (let letter in currentQuestion.answers) {\n      answers.push(`<label>\n              <input type=\"radio\" name=\"question${questionNumber}\" value=\"${letter}\">\n              ${letter})\n              ${currentQuestion.answers[letter]}\n            </label>`);\n    }\n\n    // add this question and its answers to the output array\n    output.push(`<div class=\"slide\">\n            <div class=\"question\"> ${currentQuestion.question} </div>\n            <div class=\"answers\"> ${answers.join('')} </div>\n          </div>`);\n  });\n\n  // combine  output list into one string of HTML and display on page\n  quizContainer.innerHTML = output.join('');\n}\n\n// show results to quiz  \nfunction showResults() {\n  // gather answer containers from our quiz\n  const answerContainers = quizContainer.querySelectorAll('.answers');\n\n  // keep track of user's lives\n  let score = 0;\n\n  // find answer for each question\n  questions.forEach((currentQuestion, questionNumber) => {\n    const answerContainer = answerContainers[questionNumber];\n    const selector = `input[name=question${questionNumber}]:checked`;\n    const userAnswer = (answerContainer.querySelector(selector) || {}).value;\n    if (userAnswer === currentQuestion.correctAnswer) {\n      score++;\n      answerContainers[questionNumber].style.color = 'lightgreen';\n    } else {\n      answerContainers[questionNumber].style.color = 'red';\n    }\n  });\n  resultsContainer.style.opacity = 10;\n  resultsContainer.innerHTML = `Yours score: ${score} / 6`;\n}\n\n// function to create slides of questions\nfunction showSlide(n) {\n  slides[currentSlide].classList.remove('active-slide');\n  slides[n].classList.add('active-slide');\n  currentSlide = n;\n  // submitButton.style.display = 'inline-block';\n  if (currentSlide === 0) {\n    startButton.style.display = 'inline-block';\n    nextButton.style.display = 'none';\n    submitButton.style.display = 'none';\n    planetButton.style.display = 'none';\n  } else if (currentSlide === slides.length - 1) {\n    startButton.style.display = 'none';\n    nextButton.style.display = 'none';\n    submitButton.style.display = 'inline-block';\n    planetButton.style.display = 'inline-block';\n  } else {\n    nextButton.style.display = 'inline-block';\n    submitButton.style.display = 'none';\n    startButton.style.display = 'none';\n    planetButton.style.display = 'none';\n  }\n}\nfunction showNextSlide() {\n  showSlide(currentSlide + 1);\n}\nbuildQuiz();\n\n// creating pagination\nconst startButton = document.getElementById(\"start\");\nconst nextButton = document.getElementById(\"next\");\nconst slides = document.querySelectorAll(\".slide\");\nlet currentSlide = 0;\nshowSlide(currentSlide);\nsubmitButton.addEventListener('click', showResults);\nstartButton.addEventListener(\"click\", showNextSlide);\nnextButton.addEventListener(\"click\", showNextSlide);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/venus.js\n");

/***/ })

}]);