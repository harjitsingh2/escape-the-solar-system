"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkescape_the_solar_system"] = self["webpackChunkescape_the_solar_system"] || []).push([["src_scripts_mercury_js"],{

/***/ "./src/scripts/mercury.js":
/*!********************************!*\
  !*** ./src/scripts/mercury.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _planet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./planet.js */ \"./src/scripts/planet.js\");\n\nlet mercury = new _planet_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\nfunction makePlanet1() {\n  const planet = document.getElementById(\"myplanet\");\n  planet.width = 400;\n  planet.height = 600;\n  const ctx = planet.getContext(\"2d\");\n  mercury.makeMercury(ctx);\n}\nmakePlanet1();\nconsole.log(\"Welcome to Mercury\");\n\n// array of questions and answer objects\nlet questions = [{\n  question: \"Mercury might be the smallest planet in our solar system, but it is also the fastest - traveling 29 miles per second! This is due to its proximity to the Sun. Even though it is so close to the Sun, it is not the hottest planet in our solar system. Venus is actually the hottest. Mercury has no rings or moons. The small, terrestrial planet does not have an atmosphere. It does have a thin exosphere made of oxygen, sodium, hydrogen, helium, and potassium, in descending order.\"\n}, {\n  question: \"Mercury is the _______ planet from the Sun\",\n  answers: {\n    a: \"first\",\n    b: \"second\",\n    c: \"third\"\n  },\n  correctAnswer: 'a'\n}, {\n  question: \"What is Mercury's exosphere primarily composed of?\",\n  answers: {\n    a: \"hydrogen\",\n    b: \"mercury\",\n    c: \"oxygen\"\n  },\n  correctAnswer: 'c'\n}, {\n  question: \"How fast does Mercury travel?\",\n  answers: {\n    a: \"29 miles per second\",\n    b: \"290 miles per second\",\n    c: \"2900 miles per second\"\n  },\n  correctAnswer: 'a'\n}];\n\n// get references to HTML elements\nconst quizContainer = document.getElementById('quiz');\nconst resultsContainer = document.getElementById('results');\nconst submitButton = document.getElementById('submit');\nconst planetButton = document.getElementById('next-planet');\n\n// create our game quiz\nfunction buildQuiz() {\n  // store the HTML output\n  const output = [];\n  questions.forEach((currentQuestion, questionNumber) => {\n    // store the list of possible answers\n    const answers = [];\n\n    // add radio button for each possible answer and add to array \n    for (letter in currentQuestion.answers) {\n      answers.push(`<label>\n              <input type=\"radio\" name=\"question${questionNumber}\" value=\"${letter}\">\n              ${letter})\n              ${currentQuestion.answers[letter]}\n            </label>`);\n    }\n\n    // add this question and its answers to the output array\n    output.push(`<div class=\"slide\">\n            <div class=\"question\"> ${currentQuestion.question} </div>\n            <div class=\"answers\"> ${answers.join('')} </div>\n          </div>`);\n  });\n\n  // combine  output list into one string of HTML and display on page\n  quizContainer.innerHTML = output.join('');\n}\n\n// show results to quiz  \nfunction showResults() {\n  // gather answer containers from our quiz\n  const answerContainers = quizContainer.querySelectorAll('.answers');\n\n  // keep track of user's lives\n  let score = -1;\n\n  // find answer for each question\n  questions.forEach((currentQuestion, questionNumber) => {\n    const answerContainer = answerContainers[questionNumber];\n    const selector = `input[name=question${questionNumber}]:checked`;\n    const userAnswer = (answerContainer.querySelector(selector) || {}).value;\n    if (userAnswer === currentQuestion.correctAnswer) {\n      score++;\n      answerContainers[questionNumber].style.color = 'lightgreen';\n    } else {\n      answerContainers[questionNumber].style.color = 'red';\n    }\n  });\n  let showAnswers = quizContainer.querySelector('.slide');\n\n  // how can I set the opacity to 10 after we show results?\n  showAnswers.style.opacity = 10;\n  resultsContainer.style.opacity = 10;\n  resultsContainer.innerHTML = `Yours score: ${score} / ${questions.length - 1}`;\n}\n\n// function to create slides of questions\nfunction showSlide(n) {\n  slides[currentSlide].classList.remove('active-slide');\n  slides[n].classList.add('active-slide');\n  currentSlide = n;\n  // submitButton.style.display = 'inline-block';\n  if (currentSlide === 0) {\n    startButton.style.display = 'inline-block';\n    nextButton.style.display = 'none';\n    submitButton.style.display = 'none';\n    planetButton.style.display = 'none';\n  } else if (currentSlide === slides.length - 1) {\n    startButton.style.display = 'none';\n    nextButton.style.display = 'none';\n    submitButton.style.display = 'inline-block';\n    planetButton.style.display = 'inline-block';\n  } else {\n    nextButton.style.display = 'inline-block';\n    submitButton.style.display = 'none';\n    startButton.style.display = 'none';\n    planetButton.style.display = 'none';\n  }\n}\nfunction showNextSlide() {\n  showSlide(currentSlide + 1);\n}\nbuildQuiz();\n\n// creating pagination\nconst startButton = document.getElementById(\"start\");\nconst nextButton = document.getElementById(\"next\");\nconst slides = document.querySelectorAll(\".slide\");\nlet currentSlide = 0;\nshowSlide(currentSlide);\nsubmitButton.addEventListener('click', showResults);\nstartButton.addEventListener(\"click\", showNextSlide);\nnextButton.addEventListener(\"click\", showNextSlide);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/mercury.js\n");

/***/ }),

/***/ "./src/scripts/planet.js":
/*!*******************************!*\
  !*** ./src/scripts/planet.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Planet {\n  constructor(xpos, ypos, radius, color) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.radius = radius;\n    this.color = color;\n    // this.name = name;\n  }\n\n  // add Mercury to canvas\n  makeMercury(ctx) {\n    ctx.font = \"bold 50px serif\";\n    ctx.fillText(\"Mercury\", 150, 50);\n    let base_image = new Image();\n    base_image.src = './src/images/mercury2.jpeg';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, 0, 100, 400, 400);\n    };\n    console.log(\"Mercury created\");\n  }\n  // add Venus to canvas\n  makeVenus(ctx) {\n    ctx.font = \"bold 50px serif\";\n    ctx.fillText(\"Venus\", 150, 50);\n    let base_image = new Image();\n    base_image.src = './src/images/venus.jpeg';\n    base_image.onload = function () {\n      ctx.drawImage(base_image, 0, 100, 400, 400);\n    };\n    console.log(\"Venus created\");\n  }\n\n  // draw circle onto canvas\n  draw(ctx) {\n    ctx.font = \"bold 50px serif\";\n    ctx.fillText(\"Mercury\", 100, 50);\n    // create a circle\n    ctx.beginPath();\n    ctx.arc(200, 250, 100, 0, 2 * Math.PI, true);\n    ctx.strokeStyle = \"black\"; // creates an outline\n    ctx.lineWidth = 10;\n    ctx.stroke();\n    ctx.fillStyle = \"brown\"; // creates the inside fill. inside the outline\n    ctx.fill();\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Planet);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGFuZXQuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLE1BQU0sQ0FBQztFQUNUQyxXQUFXQSxDQUFDQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsTUFBTSxFQUFFQyxLQUFLLEVBQUU7SUFDbkMsSUFBSSxDQUFDSCxJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDQyxJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDQyxNQUFNLEdBQUdBLE1BQU07SUFDcEIsSUFBSSxDQUFDQyxLQUFLLEdBQUdBLEtBQUs7SUFDbEI7RUFDSjs7RUFFQTtFQUNBQyxXQUFXQSxDQUFDQyxHQUFHLEVBQUU7SUFDYkEsR0FBRyxDQUFDQyxJQUFJLEdBQUcsaUJBQWlCO0lBQzVCRCxHQUFHLENBQUNFLFFBQVEsQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQztJQUNoQyxJQUFJQyxVQUFVLEdBQUcsSUFBSUMsS0FBSyxDQUFDLENBQUM7SUFDNUJELFVBQVUsQ0FBQ0UsR0FBRyxHQUFHLDRCQUE0QjtJQUM3Q0YsVUFBVSxDQUFDRyxNQUFNLEdBQUcsWUFBVztNQUMzQk4sR0FBRyxDQUFDTyxTQUFTLENBQUNKLFVBQVUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7SUFDL0MsQ0FBQztJQUNESyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQztFQUNsQztFQUNBO0VBQ0FDLFNBQVNBLENBQUNWLEdBQUcsRUFBRTtJQUNYQSxHQUFHLENBQUNDLElBQUksR0FBRyxpQkFBaUI7SUFDNUJELEdBQUcsQ0FBQ0UsUUFBUSxDQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDO0lBQzlCLElBQUlDLFVBQVUsR0FBRyxJQUFJQyxLQUFLLENBQUMsQ0FBQztJQUM1QkQsVUFBVSxDQUFDRSxHQUFHLEdBQUcseUJBQXlCO0lBQzFDRixVQUFVLENBQUNHLE1BQU0sR0FBRyxZQUFXO01BQzNCTixHQUFHLENBQUNPLFNBQVMsQ0FBQ0osVUFBVSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztJQUMvQyxDQUFDO0lBQ0RLLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGVBQWUsQ0FBQztFQUNoQzs7RUFFQTtFQUNBRSxJQUFJQSxDQUFDWCxHQUFHLEVBQUU7SUFDTkEsR0FBRyxDQUFDQyxJQUFJLEdBQUcsaUJBQWlCO0lBQzVCRCxHQUFHLENBQUNFLFFBQVEsQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQztJQUNoQztJQUNBRixHQUFHLENBQUNZLFNBQVMsQ0FBQyxDQUFDO0lBQ2ZaLEdBQUcsQ0FBQ2EsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUdDLElBQUksQ0FBQ0MsRUFBRSxFQUFFLElBQUksQ0FBQztJQUM1Q2YsR0FBRyxDQUFDZ0IsV0FBVyxHQUFHLE9BQU8sQ0FBQyxDQUFFO0lBQzVCaEIsR0FBRyxDQUFDaUIsU0FBUyxHQUFHLEVBQUU7SUFDbEJqQixHQUFHLENBQUNrQixNQUFNLENBQUMsQ0FBQztJQUNabEIsR0FBRyxDQUFDbUIsU0FBUyxHQUFHLE9BQU8sQ0FBQyxDQUFDO0lBQ3pCbkIsR0FBRyxDQUFDb0IsSUFBSSxDQUFDLENBQUM7RUFDZDtBQUNKO0FBR0EsK0RBQWUzQixNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXNjYXBlLXRoZS1zb2xhci1zeXN0ZW0vLi9zcmMvc2NyaXB0cy9wbGFuZXQuanM/Yjg2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBQbGFuZXQge1xuICAgIGNvbnN0cnVjdG9yKHhwb3MsIHlwb3MsIHJhZGl1cywgY29sb3IpIHtcbiAgICAgICAgdGhpcy54cG9zID0geHBvcztcbiAgICAgICAgdGhpcy55cG9zID0geXBvcztcbiAgICAgICAgdGhpcy5yYWRpdXMgPSByYWRpdXM7XG4gICAgICAgIHRoaXMuY29sb3IgPSBjb2xvcjtcbiAgICAgICAgLy8gdGhpcy5uYW1lID0gbmFtZTtcbiAgICB9ICBcbiAgICBcbiAgICAvLyBhZGQgTWVyY3VyeSB0byBjYW52YXNcbiAgICBtYWtlTWVyY3VyeShjdHgpIHtcbiAgICAgICAgY3R4LmZvbnQgPSBcImJvbGQgNTBweCBzZXJpZlwiO1xuICAgICAgICBjdHguZmlsbFRleHQoXCJNZXJjdXJ5XCIsIDE1MCwgNTApO1xuICAgICAgICBsZXQgYmFzZV9pbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICBiYXNlX2ltYWdlLnNyYyA9ICcuL3NyYy9pbWFnZXMvbWVyY3VyeTIuanBlZyc7XG4gICAgICAgIGJhc2VfaW1hZ2Uub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjdHguZHJhd0ltYWdlKGJhc2VfaW1hZ2UsIDAsIDEwMCwgNDAwLCA0MDApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUubG9nKFwiTWVyY3VyeSBjcmVhdGVkXCIpO1xuICAgIH1cbiAgICAvLyBhZGQgVmVudXMgdG8gY2FudmFzXG4gICAgbWFrZVZlbnVzKGN0eCkge1xuICAgICAgICBjdHguZm9udCA9IFwiYm9sZCA1MHB4IHNlcmlmXCI7XG4gICAgICAgIGN0eC5maWxsVGV4dChcIlZlbnVzXCIsIDE1MCwgNTApO1xuICAgICAgICBsZXQgYmFzZV9pbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICBiYXNlX2ltYWdlLnNyYyA9ICcuL3NyYy9pbWFnZXMvdmVudXMuanBlZyc7XG4gICAgICAgIGJhc2VfaW1hZ2Uub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjdHguZHJhd0ltYWdlKGJhc2VfaW1hZ2UsIDAsIDEwMCwgNDAwLCA0MDApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUubG9nKFwiVmVudXMgY3JlYXRlZFwiKTtcbiAgICB9XG5cbiAgICAvLyBkcmF3IGNpcmNsZSBvbnRvIGNhbnZhc1xuICAgIGRyYXcoY3R4KSB7XG4gICAgICAgIGN0eC5mb250ID0gXCJib2xkIDUwcHggc2VyaWZcIjtcbiAgICAgICAgY3R4LmZpbGxUZXh0KFwiTWVyY3VyeVwiLCAxMDAsIDUwKTtcbiAgICAgICAgLy8gY3JlYXRlIGEgY2lyY2xlXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgY3R4LmFyYygyMDAsIDI1MCwgMTAwLCAwLCAyICogTWF0aC5QSSwgdHJ1ZSlcbiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gXCJibGFja1wiOyAgLy8gY3JlYXRlcyBhbiBvdXRsaW5lXG4gICAgICAgIGN0eC5saW5lV2lkdGggPSAxMDtcbiAgICAgICAgY3R4LnN0cm9rZSgpO1xuICAgICAgICBjdHguZmlsbFN0eWxlID0gXCJicm93blwiOyAvLyBjcmVhdGVzIHRoZSBpbnNpZGUgZmlsbC4gaW5zaWRlIHRoZSBvdXRsaW5lXG4gICAgICAgIGN0eC5maWxsKCk7XG4gICAgfVxufVxuXG5cbmV4cG9ydCBkZWZhdWx0IFBsYW5ldDsiXSwibmFtZXMiOlsiUGxhbmV0IiwiY29uc3RydWN0b3IiLCJ4cG9zIiwieXBvcyIsInJhZGl1cyIsImNvbG9yIiwibWFrZU1lcmN1cnkiLCJjdHgiLCJmb250IiwiZmlsbFRleHQiLCJiYXNlX2ltYWdlIiwiSW1hZ2UiLCJzcmMiLCJvbmxvYWQiLCJkcmF3SW1hZ2UiLCJjb25zb2xlIiwibG9nIiwibWFrZVZlbnVzIiwiZHJhdyIsImJlZ2luUGF0aCIsImFyYyIsIk1hdGgiLCJQSSIsInN0cm9rZVN0eWxlIiwibGluZVdpZHRoIiwic3Ryb2tlIiwiZmlsbFN0eWxlIiwiZmlsbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/planet.js\n");

/***/ })

}]);